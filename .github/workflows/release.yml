name: Create Release PR

on: workflow_dispatch

jobs:
  # This workflow contains a single job called "greet"
  create-release-pr:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set Variables
        run: |
          echo "DATE=$(date +'%Y/%m/%d')" >> "$GITHUB_ENV"
          TARGET_BRANCH=""
          TITLE=""

          BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)
          if [[ $BRANCH == "staging" ]]; then
            TARGET_BRANCH=main
            TITLE=Production
          else
            print "Unexpected source branch for release"
            exit 0
          fi

          PRS=$(git tag -l --no-merged origin/$TARGET_BRANCH | grep -o "[0-9]\+")

          GITHUB_LINKS="<ul>"
          AUTHORS=""
          SLACK_MESSAGE="\
            \\"blocks\": [\
              \{\
                \\"type\": \"section\",\
                \\"text\": {\
                  \\"type\": \"mrkdwn\",\
                  \\"text\": \":rocket: A new *$TITLE release* has been created :rocket:\"\
                \}\
              \},\
              \{\
                \\"type\": \"header\",\
                \\"text\": {\
                  \\"type\": \"plain_text\",\
                  \\"text\": \"Changelist\"\
                \}\
              \}"

          gen_section() {
            echo "\
              \{ \"type\": \"divider\" },\
              \{\
                \\"type\": \"section\",\
                \\"text\": {\
                  \\"type\": \"mrkdwn\",\
                  \\"text\": \"*$1*\n*Author:* $2\"\
                \},\
                \\"accessory\": {\
                  \\"type\": \"button\",\
                  \\"text\": {\
                    \\"type\": \"plain_text\",\
                    \\"text\": \"See Change Details\"\
                  \},\
                  \\"url\": \"3$\"\
                \}\
              \}"
          }

          for pr_number in $PRS
          do
            url=https://api.github.com/repos/vidocco/nerdtrivial/pulls/$pr_number
            res=$(curl $url -H 'Content-Type: application/json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}')
            owner=$(echo $res | jq --raw-output '.user.login')
            pr_title=$(echo $res | jq --raw-output '.title')

            AUTHORS="$AUTHORS$owner$\n"
            SLACK_MESSAGE="$SLACK_MESSAGE,$(gen_section $pr_title $owner $url)"
            GITHUB_LINKS="$GITHUB_LINKS<li>vidocco/nerdtrivial/pull/$pr_number</li>"
          done

          GITHUB_LINKS="$GITHUB_LINKS</ul>"
          AUTHORS=$(echo -e $AUTHORS | sort --unique | sed -z "s/\n/,/g")
          SLACK_MESSAGE="$SLACK_MESSAGE ]"

          echo "LINKS=$GITHUB_LINKS" >> "$GITHUB_ENV"
          echo "TARGET_BRANCH=$TARGET_BRANCH" >> "$GITHUB_ENV"
          echo "TITLE=$TITLE" >> "$GITHUB_ENV"
          echo "AUTHORS=$AUTHORS" >> "$GITHUB_ENV"
          echo "SLACK_MESSAGE=$SLACK_MESSAGE" >> "$GITHUB_ENV"
      - uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_branch: "${{ env.TARGET_BRANCH }}"
          pr_title: "${{ env.TITLE }} Release - ${{env.DATE}}"
          pr_reviewer: "${{ env.AUTHORS }}"
          pr_body: |
            ## Changelist <br/>
            ${{ env.LINKS }}

            ## Checklist <br/>
            - [ ] All backup tasks have been performed.
      - name: Notify support-general
        if: ${{ env.TARGET_BRANCH == 'main' }}
        uses: pullreminders/slack-action@master
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          args: "{ \"channel\": \"C9ZH84S3S\", ${{env.SLACK_MESSAGE}} }"
